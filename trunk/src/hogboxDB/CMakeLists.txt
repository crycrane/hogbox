
IF   (DYNAMIC_hogbox)

    OPTION(hogbox_PLUGIN_SEARCH_INSTALL_DIR_FOR_PLUGINS "Set to ON to have HogBox search the configured install directory for plugins." ON)

    ADD_DEFINITIONS(-DHOGBOXDB_LIBRARY)

    IF(hogbox_PLUGIN_SEARCH_INSTALL_DIR_FOR_PLUGINS)
        # Add a default plugin search path component
        #ADD_DEFINITIONS(-DHOGBOX_DEFAULT_LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib${LIB_POSTFIX}/${hogbox_PLUGINS})
    ENDIF()

    # Set the library extension according to what configuration is being built.
    # If the string is empty, don't set the define.
    IF(CMAKE_DEBUG_POSTFIX)
        SET(CMAKE_CXX_FLAGS_DEBUG
            "${CMAKE_CXX_FLAGS_DEBUG} -DHOGBOX_LIBRARY_POSTFIX=${CMAKE_DEBUG_POSTFIX}")
    ENDIF()
    IF(CMAKE_RELEASE_POSTFIX)
        SET(CMAKE_CXX_FLAGS_RELEASE
            "${CMAKE_CXX_FLAGS_RELEASE} -DHOGBOX_LIBRARY_POSTFIX=${CMAKE_RELEASE_POSTFIX}")
    ENDIF()
    IF(CMAKE_RELWITHDEBINFO_POSTFIX)
        SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO
            "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -DHOGBOX_LIBRARY_POSTFIX=${CMAKE_RELWITHDEBINFO_POSTFIX}")
    ENDIF()
    IF(CMAKE_MINSIZEREL_POSTFIX)
        SET(CMAKE_CXX_FLAGS_MINSIZEREL
            "${CMAKE_CXX_FLAGS_MINSIZEREL} -DHOGBOX_LIBRARY_POSTFIX=${CMAKE_MINSIZEREL_POSTFIX}")
    ENDIF()
ELSE ()
    ADD_DEFINITIONS(-DHOGBOX_LIBRARY_STATIC)
ENDIF()


SET(LIB_NAME hogboxDB)
SET(HEADER_PATH ${hogbox_SOURCE_DIR}/include/${LIB_NAME})

SET(LIB_PUBLIC_HEADERS
    ${HEADER_PATH}/Export.h
	${HEADER_PATH}/HogBoxBaseXmlDef.h
	${HEADER_PATH}/HogBoxManager.h
	${HEADER_PATH}/HogBoxRegistry.h
	${HEADER_PATH}/XmlAttribute.h
	${HEADER_PATH}/XmlAttributeList.h
	${HEADER_PATH}/XmlAttributeMap.h
	${HEADER_PATH}/XmlAttributePtr.h
	${HEADER_PATH}/XmlClassManager.h
	${HEADER_PATH}/XmlClassManagerWrapper.h
	${HEADER_PATH}/XmlClassWrapper.h
	${HEADER_PATH}/XmlUtils.h
)

# FIXME: For OS X, need flag for Framework or dylib
ADD_LIBRARY(${LIB_NAME}
    ${hogbox_USER_DEFINED_DYNAMIC_OR_STATIC}
    ${LIB_PUBLIC_HEADERS}
    HogBoxManager.cpp
	HogBoxRegistry.cpp
	XmlClassManager.cpp
	XmlClassWrapper.cpp
)

IF(APPLE)
    # Needs CoreFoundation calls and a Carbon function
    SET(HOGBOXDB_PLATFORM_SPECIFIC_LIBRARIES ${CARBON_LIBRARY})
 
ENDIF()

ADD_DEFINITIONS(-DHOGBOX_PLUGIN_EXTENSION=${CMAKE_SHARED_MODULE_SUFFIX})

LINK_INTERNAL(${LIB_NAME} hogbox)

LINK_WITH_VARIABLES(${LIB_NAME}     
    OSG_LIBRARY
    OSGDB_LIBRARY
    OSGUTIL_LIBRARY
    OSGVIEWER_LIBRARY
	OSGGA_LIBRARY
    OPENTHREADS_LIBRARY
)
LINK_EXTERNAL(${LIB_NAME} ${OPENGL_LIBRARIES}) 
LINK_CORELIB_DEFAULT(${LIB_NAME})

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_POSTFIX "d")
if(MSVC)
    SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES PREFIX "../")
    SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES IMPORT_PREFIX "../")
endif(MSVC)

INCLUDE(ModuleInstall OPTIONAL)

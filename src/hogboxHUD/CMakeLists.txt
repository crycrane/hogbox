
IF(DYNAMIC_hogbox)
    ADD_DEFINITIONS(-DHOGBOXHUD_LIBRARY)
ELSE()
    ADD_DEFINITIONS(-DHOGBOX_LIBRARY_STATIC)
ENDIF()

SET(LIB_NAME hogboxHUD)
SET(HEADER_PATH ${hogbox_SOURCE_DIR}/include/${LIB_NAME})

SET(LIB_PUBLIC_HEADERS
    ${HEADER_PATH}/ButtonRegion.h
    ${HEADER_PATH}/Export.h
    ${HEADER_PATH}/HogBoxHud.h
    ${HEADER_PATH}/HudInputEvent.h
    ${HEADER_PATH}/HudRegion.h
    ${HEADER_PATH}/OsgInput.h
    ${HEADER_PATH}/TextRegion.h
)

# FIXME: For OS X, need flag for Framework or dylib
ADD_LIBRARY(${LIB_NAME}
    ${hogbox_USER_DEFINED_DYNAMIC_OR_STATIC}
    ${LIB_PUBLIC_HEADERS}
    ButtonRegion.cpp
	HogBoxHud.cpp
	HudRegion.cpp
	OsgInput.cpp
	TextRegion.cpp
)

LINK_INTERNAL(${LIB_NAME} hogbox)

LINK_WITH_VARIABLES(${LIB_NAME}     
    OSG_LIBRARY
    OSGDB_LIBRARY
    OSGTEXT_LIBRARY
    OSGUTIL_LIBRARY
    OSGVIEWER_LIBRARY
	OSGGA_LIBRARY
    OPENTHREADS_LIBRARY
)
LINK_EXTERNAL(${LIB_NAME} ${OPENGL_LIBRARIES}) 
LINK_CORELIB_DEFAULT(${LIB_NAME})

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_POSTFIX "d")
if(MSVC)
    SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES PREFIX "../")
    SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES IMPORT_PREFIX "../")
endif(MSVC)

INCLUDE(ModuleInstall OPTIONAL)